I"<h2 id="pyqt5-gui">PyQt5 GUI</h2>

<p>This is the first week of coding period, so I started with designing UI for the web-templates. I began by making a simple PyQt5 GUI for a pick-and-place exercise.</p>

<p><a href="https://pypi.org/project/PyQt5/">PyQt5</a> is a comprehensive set of Python bindings for Qt v5. It is implemented as more than 35 extension modules and enables Python to be used as an alternative application development language to C++ on all supported platforms including iOS and Android.</p>

<p>Since the pick and place exercise necessitates heavy use of Gazebo and Rviz, I positioned their displays side by side so that users would not experience difficulty scrolling or changing tabs. The basic design of a GUI is seen in the figure below.</p>

<p align="center"><img src="https://lh3.googleusercontent.com/vW8PW_aGAPuWcyc9iP54UJWEiwo8LLA3Pwau2UFR1WNQwb9VnXAl5NGvkSTXJ7yw0SvzdgA1bY5U2gzsiH-rQDY59dze8Xq73ww_h_dHnY2Ic9cSKAbx0_J5qJLxuBq0Q-dzRj3Zxk44icgi4oD1MMULe2kIOvcTNHxY-rUwH8qU2XaqWFre9pMJ0A8CjFrfjUUJ0fRIXmQEg3J2XvgT2WcceKXPB4vXPrjRr2ekQs5SU9DbzZvV6yHuqWx9np4RFGPq_0Alg5tg_Adj3EkcAF3Vr-cDNN1aPE5SSZIIeHG7M6q_gSljcpvqgLRlXwodhWqUj8mgmIe9L5l2kyGkM6MXQp-NpfeoYW00l71v3WjW_LqhJVgz2P2Vcffxij5Q0XQibJDcyaVqsuCfcvqosKAHhc0wbIUm32xnjFvEk32Wba4BtUwJlZvgAI2nyxK4Iw2CINNUHnVBtW8VHCsv125S3Fo2AuhWNMKNLY1aYbsDC3XIbCW66NpT8truCh3ZbB2v278SMqn-Y3K9FMSwDuqXFPk258zaCjAunquOk5Z5snrZjVkeUXXcJKsevJz-t_uZabWzRU8RWWeb60DmVsa6Eu1JZCmZexAj7KAKrzKmlwhI03pq1HXWDZ0D8l3PuGvxwACDLcL7qn_TJp7WY0AGcZSTgJhEeuzxmpSvhKi-szlHMWjw0KJz4PtHtlDZzWZHk8rn-IVskVT1yCZYnF0=w1093-h838-no?authuser=0" />&lt;/img&gt;</p>

<p>Since Robotics Academy has shifted to web-templates, we will no longer be working on PyQt5 GUIs and will instead focus on improving the web-templates of current exercises.</p>

<h2 id="adding-cards-for-pick-and-place-exercise">Adding cards for pick and place exercise</h2>

<p>To include a new exercise, one needs to add the folder with the exercise contents in exercises/static/exercises following the file name conventions. Then, create the entry in db.sqlite3. A simple way to do this is by using the Django admin page:</p>

<ol>
  <li>Run python3.8 manage.py runserver.</li>
  <li>Access http://127.0.0.1:8000/admin/ on a browser and log in with ‚Äúuser‚Äù and ‚Äúpass‚Äù.</li>
  <li>Click on ‚Äúadd exercise‚Äù and fill the fields: exercise id (folder name), name (name to display), state, language and description (description to display). Save and exit.</li>
  <li>Commit db.sqlite3 changes.</li>
</ol>

<h2 id="user-interface-for-pick-and-place-exercise">User Interface for pick and place exercise</h2>

<p>After creating a card for pick and place, I started working on User Interface of the exercise. As already mentioned, this exercise relies heavily on Rviz and Gazebo and does not require use of any additional widgets.</p>
:ET